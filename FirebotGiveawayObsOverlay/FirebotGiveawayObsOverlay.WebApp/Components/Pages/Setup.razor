@using FirebotGiveawayObsOverlay.WebApp.Helpers
@using FirebotGiveawayObsOverlay.WebApp.Services
@inject TimerService TimerService

@page "/setup"
@rendermode InteractiveServer

<PageTitle>Setup</PageTitle>

<h3>Setup</h3>

<hr />

<div class="mb-3">
    <label class="form-label">Countdown Timer</label>
    <div class="d-flex gap-2">
        <div class="flex-grow-1">
            <label class="form-label">Minutes</label>
            <input type="number" required
                   placeholder="Minutes"
                   class="form-control"
                   min="0"
                   max="99"
                   @bind="countdownMinutes"
                   @bind:event="oninput"
                   @bind:after="SetCountdownTime" />
        </div>
        <div class="flex-grow-1">
            <label class="form-label">Seconds</label>
            <input type="number" required
                   placeholder="Seconds"
                   class="form-control"
                   min="0"
                   max="59"
                   @bind="countdownSeconds"
                   @bind:event="oninput"
                   @bind:after="SetCountdownTime" />
        </div>
    </div>
</div>

<div class="mb-3">
    <button class="btn btn-primary" @onclick="ResetGiveawayTimer">Reset Timer</button>
    <span class="ms-2 @(resetSuccess ? "text-success" : "text-danger")">@resetMessage</span>
</div>

<div class="mb-3">
    <label class="form-label">Firebot file path</label>
    <input 
        type="text" required
        placeholder="Set the path where to find the Firebot files" 
        class="form-control"
        @bind="firebotFilePath"
        @bind:event="oninput"
        @bind:after="SetFirebotFilePath" />
</div>

@code {
    private string firebotFilePath = GiveAwayHelpers.GetFireBotFileFolder();
    private int countdownMinutes;
    private int countdownSeconds;
    private string resetMessage = "";
    private bool resetSuccess = false;

    protected override void OnInitialized()
    {
        var (minutes, seconds) = GiveAwayHelpers.GetCountdownTime();
        countdownMinutes = minutes;
        countdownSeconds = seconds;
    }

    private void SetFirebotFilePath()
    {
        GiveAwayHelpers.SetFireBotFileFolder(firebotFilePath);
    }

    private void SetCountdownTime()
    {
        GiveAwayHelpers.SetCountdownTime(countdownMinutes, countdownSeconds);
    }

    private void ResetGiveawayTimer()
    {
        try
        {
            TimerService.ResetTimer();
            resetMessage = "Timer reset successfully!";
            resetSuccess = true;
        }
        catch (Exception ex)
        {
            resetMessage = $"Error: {ex.Message}";
            resetSuccess = false;
        }
    }
}
