@using FirebotGiveawayObsOverlay.WebApp.Components.Layout
@using FirebotGiveawayObsOverlay.WebApp.Helpers
@using FirebotGiveawayObsOverlay.WebApp.Extensions
@using System.Timers

@layout NoMenuLayout
@page "/giveaway"
@rendermode InteractiveServer

<PageTitle>Give Away</PageTitle>

@if (isGiveAwayRunning)
{
    <div class="container">
        <div class="tech-frame">
            <h1 class="title">
                <span class="primarySpan">@prize</span>
            </h1>
            @if (doesGiveawayHaveWinner)
            {
                <h2 class="title-winner">Winner: <span class="secondarySpan">@winner</span></h2>
            }
            else if (entries.Any())
            {
                <h2 class="title-entries primarySpan">
                    <span class="@(previousEntryCount != entries.Length ? "entry-count-animate" : "")">
                        @entries.Length
                    </span>
                    Entries
                </h2>
            }
        </div>
    </div>
}

@code {
    private string prize = string.Empty;
    private string winner = string.Empty;
    private string[] entries = [];
    private Timer fileScanTimer = new Timer(1000);

    private bool isGiveAwayRunning = false;
    private bool doesGiveawayHaveWinner = false;
    private int previousEntryCount = 0;

    protected override async Task OnInitializedAsync()
    {
        await GetLatestGiveAwayDetails();
        fileScanTimer.Elapsed += new ElapsedEventHandler(HandleFileScanTimer);
        StartFileScanTimer();
    }

    private void StartFileScanTimer()
    {        
        fileScanTimer.Start();
    }

    public async void HandleFileScanTimer(object? source, ElapsedEventArgs e)
    {
        await GetLatestGiveAwayDetails();
        await InvokeAsync(StateHasChanged);
    }

    private async Task GetLatestGiveAwayDetails()
    {
        Task<string> getPrizeTask = FireBotFileReader.GetPrizeAsync();
        Task<string[]> getEntriesTask = FireBotFileReader.GetEntriesAsync();
        Task<string> getWinnerTask = FireBotFileReader.GetWinnerAsync();

        await Task.WhenAll(getPrizeTask, getEntriesTask, getWinnerTask).ConfigureAwait(false);

        prize = getPrizeTask.Result;
        var newEntries = getEntriesTask.Result;
        
        // Update previous count before setting new entries
        previousEntryCount = entries.Length;
        entries = newEntries;
        
        winner = getWinnerTask.Result;

        isGiveAwayRunning = !string.IsNullOrWhiteSpace(prize);
        doesGiveawayHaveWinner = !string.IsNullOrWhiteSpace(winner);
    }

    public void Dispose()
    {
        fileScanTimer.Dispose();
    }
}
